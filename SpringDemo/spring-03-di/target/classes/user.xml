<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--注入方式一：通过set方法注入-->
    <!--<bean id="user" class="com.test.namespace.User">
        <property name="name" value="zhangsan"></property>
        <property name="age" value="20"></property>
    </bean>-->

    <!--注入方式二：通过构造器注入-->
    <!--<bean id="user" class="com.test.namespace.User">
        <constructor-arg name="name" value="lisi"></constructor-arg>
        <constructor-arg name="age" value="22"></constructor-arg>
    </bean>-->

    <!--注入方式三：使用p标签，注入属性-->
    <!--普通属性：p:属性名称=“值”
    对象类型的属性：p:属性名称-ref=“值”-->
    <!--<bean id="user" class="com.test.namespace.User" p:name="wangwu" p:age="21"></bean>-->

    <!--注入方式四，使用c标签，通过构造器注入-->
    <!--如果构造方法参数是一个引用数据类型，则在构造参数名称加上“-ref”，如 c:name-ref -->
    <!--c命名空间的缺陷，不支持集合-->
    <!--<bean id="user" class="com.test.namespace.User" c:name="jerry" c:age="18"></bean>-->

    <!--scope="prototype"多例模式，每次getBean都会生成一个新的对象-->
    <!--<bean id="user" class="com.test.namespace.User" scope="prototype">
        <property name="name" value="tom"></property>
        <property name="age" value="30"></property>
    </bean>-->

    <!--单例模式，可以使用lazy-init指定是否访问时才创建-->
    <!--<bean id="user" class="com.test.namespace.User" lazy-init="true">
    <property name="name" value="tom"></property>
    <property name="age" value="30"></property>
    </bean>-->

    <!--spel集合投影-->
    <bean id="user1" class="com.test.namespace.User" c:name="jerry" c:age="18"></bean>
    <bean id="user2" class="com.test.namespace.User" c:name="tom" c:age="16"></bean>
    <bean id="user3" class="com.test.namespace.User" c:name="jack" c:age="19"></bean>
    <bean id="user4" class="com.test.namespace.User" c:name="helen" c:age="20"></bean>

    <bean id="customer" class="com.test.namespace.Customer">
        <property name="users">
            <list>
                <ref bean="user1"/>
                <ref bean="user2"/>
                <ref bean="user3"/>
                <ref bean="user4"/>
            </list>
        </property>
    </bean>

    <bean id="name" class="com.test.namespace.Name">
        <property name="names" value="#{customer.users.?[age > 18 or age == 18].![name]}"/>
    </bean>
</beans>