<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--<bean id="cat" class="com.test.bean.Cat"></bean>
    <bean id="dog" class="com.test.bean.Dog"></bean>-->

    <!--方式一，手动装配-->
    <!--<bean id="person" class="com.test.bean.Person">
        <property name="name" value="scott"></property>
        <property name="dog" ref="dog"></property>
        <property name="cat" ref="cat"></property>
    </bean>-->

    <!--方式二，通过参数类型自动装配-->
    <!--<bean id="person" class="com.test.bean.Person" autowire="byType">
        <property name="name" value="scott"></property>
    </bean>-->

    <!--方式三，通过名称自动装配，id必须和set方法的名称一致（当前存在2个dog类实例，使用byType无法区分）-->
    <!--<bean id="cat" class="com.test.bean.Cat"></bean>
    <bean id="dog" class="com.test.bean.Dog"></bean>
    <bean id="dog2" class="com.test.bean.Dog"></bean>-->

    <!--<bean id="person" class="com.test.bean.Person" autowire="byName">
        <property name="name" value="scott"></property>
    </bean>-->

    <!--方式四，使用注解-->
    <!--注解类也需要让spring管理生成实例，因此让@Autowired、@Resource等常用注解正常使用的注解类通过一个配置自动注册bean-->
    <context:annotation-config></context:annotation-config>

    <bean id="cat" class="com.test.bean.Cat"></bean>
    <bean id="dog" class="com.test.bean.Dog"></bean>
    <bean id="dog2" class="com.test.bean.Dog"></bean>

    <bean id="person" class="com.test.bean.Person">
        <property name="name" value="scott"></property>
    </bean>
</beans>