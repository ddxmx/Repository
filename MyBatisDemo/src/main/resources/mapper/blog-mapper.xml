<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.mybatis.dao.BlogDao">
    <select id="getBlogByTitleOrAuthor" resultType="com.test.mybatis.pojo.Blog">
        select * from mybatis.blog
        <!--where标签能够自动去除无用的where、and、or关键字-->
        <where>
            <!--test表示判断,其中的属性是入参中的属性-->
            <if test="title != null">
                title=#{title}
            </if>
            <if test="author != null">
                or author=#{author}
            </if>
        </where>
    </select>

    <!--SQL片段，最好基于单表来定义，不要包括where等-->
    <sql id="sql-title-author">
        <if test="title != null">
            title=#{title},
        </if>
        <if test="author != null">
            author=#{author}
        </if>
    </sql>

    <update id="updateBlog">
        update mybatis.blog
        <!--set标签能够自动去除无用的set关键字和无用的逗号,-->
        <set>
            <include refid="sql-title-author"></include>
        </set>
        where id=#{id}
    </update>

    <!--choose就是java中if-else的能力-->
    <select id="getBlogByTitleChoiceAuthor" resultType="com.test.mybatis.pojo.Blog">
        select * from mybatis.blog
        <where>
            <choose>
                <when test="title != null">
                    title=#{title}
                </when>
                <when test="author != null">
                    author = #{author}
                </when>
                <otherwise>
                    author='张三'
                </otherwise>
            </choose>
        </where>
    </select>

    <select id="getBlogForeach" resultType="com.test.mybatis.pojo.Blog">
        select * from mybatis.blog
        <where>
            id in
            <!--如果传递的是一个List，则mybatis会封装为一个以list字符串为key的map-->
            <foreach collection="list" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
            <!--如果是array，则mybatis会封装为一个以array字符串为key的map-->
            <!--<foreach collection="array" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>-->
            <!--如果自己封装，则collection里放的是自定义map的key
                Map map = new HashMap();
                List list = new ArrayList();
                list.add(1);
                list.add(3);
                list.add(5);
                list.add(7);
                map.put("ids",list);
            -->
            <!--<foreach collection="ids" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>-->
        </where>
    </select>
</mapper>